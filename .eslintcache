[{"D:\\ReactThree\\threefiberplayground\\src\\index.js":"1","D:\\ReactThree\\threefiberplayground\\src\\reportWebVitals.js":"2","D:\\ReactThree\\threefiberplayground\\src\\App.js":"3","D:\\ReactThree\\threefiberplayground\\src\\config\\index.js":"4","D:\\ReactThree\\threefiberplayground\\src\\config\\state.js":"5","D:\\ReactThree\\threefiberplayground\\src\\components\\Header.js":"6","D:\\ReactThree\\threefiberplayground\\src\\components\\Section.js":"7","D:\\ReactThree\\threefiberplayground\\src\\utils\\index.js":"8","D:\\ReactThree\\threefiberplayground\\src\\utils\\lerp.js":"9","D:\\ReactThree\\threefiberplayground\\src\\example\\index.js":"10","D:\\ReactThree\\threefiberplayground\\src\\example\\solarsystem.js":"11","D:\\ReactThree\\threefiberplayground\\src\\example\\meshlines.js":"12","D:\\ReactThree\\threefiberplayground\\src\\example\\CatmulroveCurves.js":"13","D:\\ReactThree\\threefiberplayground\\src\\example\\ModelLoader.js":"14","D:\\ReactThree\\threefiberplayground\\src\\models\\Scull.js":"15"},{"size":500,"mtime":1609133781628,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1609133781628,"results":"18","hashOfConfig":"17"},{"size":851,"mtime":1609754570335,"results":"19","hashOfConfig":"17"},{"size":49,"mtime":1609138333181,"results":"20","hashOfConfig":"17"},{"size":146,"mtime":1609138443497,"results":"21","hashOfConfig":"17"},{"size":621,"mtime":1609138519155,"results":"22","hashOfConfig":"17"},{"size":1737,"mtime":1609138354561,"results":"23","hashOfConfig":"17"},{"size":46,"mtime":1609165535310,"results":"24","hashOfConfig":"17"},{"size":86,"mtime":1609136775438,"results":"25","hashOfConfig":"17"},{"size":218,"mtime":1609583825687,"results":"26","hashOfConfig":"17"},{"size":1900,"mtime":1609315976267,"results":"27","hashOfConfig":"17"},{"size":2603,"mtime":1609401558225,"results":"28","hashOfConfig":"17"},{"size":1309,"mtime":1609477682026,"results":"29","hashOfConfig":"17"},{"size":290,"mtime":1609659644257,"results":"30","hashOfConfig":"17"},{"size":1362,"mtime":1609659655164,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1a5zrul",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ReactThree\\threefiberplayground\\src\\index.js",[],["70","71"],"D:\\ReactThree\\threefiberplayground\\src\\reportWebVitals.js",[],"D:\\ReactThree\\threefiberplayground\\src\\App.js",["72","73","74","75"],"D:\\ReactThree\\threefiberplayground\\src\\config\\index.js",[],["76","77"],"D:\\ReactThree\\threefiberplayground\\src\\config\\state.js",[],"D:\\ReactThree\\threefiberplayground\\src\\components\\Header.js",[],"D:\\ReactThree\\threefiberplayground\\src\\components\\Section.js",[],"D:\\ReactThree\\threefiberplayground\\src\\utils\\index.js",[],["78","79"],"D:\\ReactThree\\threefiberplayground\\src\\utils\\lerp.js",[],"D:\\ReactThree\\threefiberplayground\\src\\example\\index.js",[],["80","81"],"D:\\ReactThree\\threefiberplayground\\src\\example\\solarsystem.js",["82"],"import React, { useRef } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nconst radius = 1;\r\nconst widthSegments = 6;\r\nconst heightSegments = 6;\r\n\r\nconst SphereGeometry = () => (\r\n  <sphereBufferGeometry args={[radius, widthSegments, heightSegments]} />\r\n);\r\n// const earthMaterial = new THREE.MeshPhongMaterial({color: 0x2233FF, emissive: 0x112244});\r\n// const earthMesh = new THREE.Mesh(sphereGeometry, earthMaterial);\r\n// earthMesh.position.x = 10;\r\n// scene.add(earthMesh);\r\n// objects.push(earthMesh);\r\nconst EarthMesh = ({ scale, ...rest }) => {\r\n  const meshRef = useRef();\r\n  useFrame(() => {\r\n    meshRef.current.rotation.x = meshRef.current.rotation.x += 0.01;\r\n  });\r\n  return (\r\n    <mesh ref={meshRef} scale={scale} {...rest}>\r\n      <SphereGeometry />\r\n      <meshPhongMaterial color={0x2233ff} emissive={0x112244} />\r\n    </mesh>\r\n  );\r\n};\r\nconst SunMesh = ({ scale, ...rest }) => {\r\n  return (\r\n    <mesh scale={scale} {...rest}>\r\n      <SphereGeometry />\r\n      <meshPhongMaterial color={0xffff00} emissive={0xffff00} />;\r\n    </mesh>\r\n  );\r\n};\r\nconst MoonMesh = ({ scale, ...rest }) => {\r\n  return (\r\n    <mesh scale={scale} {...rest}>\r\n      <SphereGeometry />\r\n      <meshPhongMaterial color={0x888888} emissive={0x222222} />;\r\n    </mesh>\r\n  );\r\n};\r\nconst EarthOrbit = () => {\r\n  const earthOrbitRef = useRef();\r\n  useFrame(() => {\r\n    earthOrbitRef.current.rotation.y += 0.1;\r\n  });\r\n  return (\r\n    <object3D ref={earthOrbitRef}>\r\n      <EarthMesh position={[0, 2, 0]} scale={[0.4, 0.4, 0.4]} />\r\n      <MoonMesh position={[0, 3, 0]} scale={[0.1, 0.1, 0.1]} />\r\n      <axesHelper renderOrder={1} />\r\n    </object3D>\r\n  );\r\n};\r\nexport default () => {\r\n  const solarRef = useRef();\r\n  useFrame(() => {\r\n    solarRef.current.rotation.z -= 0.01;\r\n  });\r\n  return (\r\n    <object3D ref={solarRef}>\r\n      <SunMesh />\r\n      <EarthOrbit />\r\n    </object3D>\r\n  );\r\n};\r\n","D:\\ReactThree\\threefiberplayground\\src\\example\\meshlines.js",["83","84"],"import React, { useState, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { extend, Canvas, useFrame } from \"react-three-fiber\";\r\nimport * as meshline from \"threejs-meshline\";\r\n\r\nextend(meshline);\r\n\r\nconst numLines = 30;\r\nconst lines = new Array(numLines).fill();\r\nconst colors = [\"#A2CCB6\", \"#FCEEB5\", \"#EE786E\", \"#EE786E\"];\r\n\r\nfunction Fatline() {\r\n  const material = useRef();\r\n  const [color] = useState(\r\n    () => colors[parseInt(colors.length * Math.random())]\r\n  );\r\n  const [ratio] = useState(() => 0.5 + 0.5 * Math.random());\r\n  const [width] = useState(() => Math.max(0.1, 0.3 * Math.random()));\r\n  // Calculate wiggly curve\r\n  const [curve] = useState(() => {\r\n    let pos = new THREE.Vector3(10 * Math.random(), -50, 20 * Math.random());\r\n    return new Array(1)\r\n      .fill()\r\n      .map(() =>\r\n        pos\r\n          .add(\r\n            new THREE.Vector3(-0.4 + Math.random(), 5 - Math.random() * 2, 0)\r\n          )\r\n          .clone()\r\n      );\r\n  });\r\n  // Hook into the render loop and decrease the materials dash-offset\r\n  useFrame(() => (material.current.uniforms.dashOffset.value -= 0.0005));\r\n  return (\r\n    <mesh>\r\n      {/** MeshLine and CMRCurve are a OOP factories, not scene objects, hence all the imperative code in here :-( */}\r\n      <meshLine onUpdate={(self) => (self.parent.geometry = self.geometry)}>\r\n        <geometry onUpdate={(self) => self.parent.setGeometry(self)}>\r\n          <catmullRomCurve3\r\n            args={[curve]}\r\n            onUpdate={(self) => (self.parent.vertices = self.getPoints(500))}\r\n          />\r\n        </geometry>\r\n      </meshLine>\r\n      {/** MeshLineMaterial on the other hand is a regular material, so we can just attach it */}\r\n      <meshLineMaterial\r\n        attach=\"material\"\r\n        ref={material}\r\n        transparent\r\n        depthTest={false}\r\n        lineWidth={width}\r\n        color={color}\r\n        dashArray={0.2}\r\n        dashRatio={ratio}\r\n      />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction Scene() {\r\n  let group = useRef();\r\n  let theta = 0;\r\n  // Hook into the render loop and rotate the scene a bit\r\n  //   useFrame(() =>\r\n  //     group.current.rotation.set(\r\n  //       0,\r\n  //       10 * Math.sin(THREE.Math.degToRad((theta += 0.02))),\r\n  //       0\r\n  //     )\r\n  //   );\r\n  return (\r\n    <group ref={group}>\r\n      {lines.map((_, index) => (\r\n        <Fatline key={index} />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default () => {\r\n  return (\r\n    <Canvas\r\n      style={{ background: \"#324444\" }}\r\n      camera={{ position: [0, 50, 10], fov: 75 }}\r\n    >\r\n      <Scene />\r\n    </Canvas>\r\n  );\r\n};\r\n","D:\\ReactThree\\threefiberplayground\\src\\example\\CatmulroveCurves.js",["85","86"],"import React from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport * as THREE from \"three\";\r\n\r\nconst pipeSpline = [\r\n  new THREE.Vector3(0, 10, -10),\r\n  new THREE.Vector3(10, 0, -10),\r\n  new THREE.Vector3(20, 0, 0),\r\n  new THREE.Vector3(30, 0, 10),\r\n  new THREE.Vector3(30, 0, 20),\r\n  new THREE.Vector3(20, 0, 30),\r\n  new THREE.Vector3(10, 0, 30),\r\n  new THREE.Vector3(0, 0, 30),\r\n  new THREE.Vector3(-10, 10, 30),\r\n  new THREE.Vector3(-10, 20, 30),\r\n  new THREE.Vector3(0, 30, 30),\r\n  new THREE.Vector3(10, 30, 30),\r\n  new THREE.Vector3(20, 30, 15),\r\n  new THREE.Vector3(10, 30, 10),\r\n  new THREE.Vector3(0, 30, 10),\r\n  new THREE.Vector3(-10, 20, 10),\r\n  new THREE.Vector3(-10, 10, 10),\r\n  new THREE.Vector3(0, 0, 10),\r\n  new THREE.Vector3(10, -10, 10),\r\n  new THREE.Vector3(20, -15, 10),\r\n  new THREE.Vector3(30, -15, 10),\r\n  new THREE.Vector3(40, -15, 10),\r\n  new THREE.Vector3(50, -15, 10),\r\n  new THREE.Vector3(60, 0, 10),\r\n  new THREE.Vector3(70, 0, 0),\r\n  new THREE.Vector3(80, 0, 0),\r\n  new THREE.Vector3(90, 0, 0),\r\n  new THREE.Vector3(100, 0, 0),\r\n];\r\nconst SampleCurve = () => {\r\n  return (\r\n    <mesh>\r\n      <CatmullRomCurves3 args={pipeSpline} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  <Canvas style={{ background: \"#324444\" }}>\r\n    <SampleCurve />\r\n  </Canvas>;\r\n};\r\n",["87","88"],"D:\\ReactThree\\threefiberplayground\\src\\example\\ModelLoader.js",["89"],"D:\\ReactThree\\threefiberplayground\\src\\models\\Scull.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":4,"column":21,"nodeType":"97","messageId":"98","endLine":4,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":11,"column":1,"nodeType":"102","endLine":29,"endColumn":3},{"ruleId":"95","severity":1,"message":"103","line":14,"column":9,"nodeType":"97","messageId":"98","endLine":14,"endColumn":20},{"ruleId":"91","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"91","replacedBy":"108"},{"ruleId":"93","replacedBy":"109"},{"ruleId":"100","severity":1,"message":"101","line":57,"column":1,"nodeType":"102","endLine":68,"endColumn":3},{"ruleId":"95","severity":1,"message":"110","line":62,"column":7,"nodeType":"97","messageId":"98","endLine":62,"endColumn":12},{"ruleId":"100","severity":1,"message":"101","line":80,"column":1,"nodeType":"102","endLine":89,"endColumn":3},{"ruleId":"111","severity":2,"message":"112","line":38,"column":8,"nodeType":"113","endLine":38,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":43,"column":1,"nodeType":"102","endLine":47,"endColumn":3},{"ruleId":"91","replacedBy":"114"},{"ruleId":"93","replacedBy":"115"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":1,"nodeType":"102","endLine":13,"endColumn":3},{"ruleId":"95","severity":1,"message":"116","line":9,"column":17,"nodeType":"97","messageId":"98","endLine":9,"endColumn":23},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useSpring' is defined but never used.","Identifier","unusedVar","'a' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'handleClick' is assigned a value but never used.",["117"],["118"],["117"],["118"],["117"],["118"],"'theta' is assigned a value but never used.","react/jsx-no-undef","'CatmullRomCurves3' is not defined.","JSXIdentifier",["117"],["118"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]